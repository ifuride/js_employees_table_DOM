{"version":3,"sources":["scripts/main.js"],"names":["previousRow","table","document","querySelector","tableHead","tableBody","headers","querySelectorAll","isColumnSorted","cleanState","state","headerState","pushNotification","posTop","posRight","title","description","type","insertAdjacentHTML","notification","style","top","right","setTimeout","remove","checkForErrors","employeeName","position","office","age","salary","errorMessages","length","push","Number","isNaN","forEach","a","innerText","addEventListener","handler","rows","header","target","closest","orderSign","sort","b","children","localeCompare","slice","replace","item","append","classList","row","add","form","forms","preventDefault","data","FormData","get","trim","salaryString","toLocaleString","join","reset","e","cell","cellIndex","initialValue","selectedRow","input","createElement","updateCell","cellValues","i","value","name","setAttribute","focus","handleKeypress","key"],"mappings":"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","file":"main.bc107b28.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst headers = document.querySelectorAll('thead > tr > th');\nconst isColumnSorted = {};\n\nheaders.forEach(a => {\n  isColumnSorted[a.innerText] = 1;\n});\n\nfunction cleanState(state) {\n  for (const headerState in state) {\n    state[headerState] = 1;\n  }\n};\n\ntableHead.addEventListener('click', (handler) => {\n  const rows = [...tableBody.rows];\n  const header = handler.target.closest('th').innerText;\n  const orderSign = isColumnSorted[header];\n\n  cleanState(isColumnSorted);\n  isColumnSorted[header] = -orderSign;\n\n  switch (header) {\n    case 'Name':\n      rows.sort((a, b) =>\n        orderSign * (a.children[0].innerText)\n          .localeCompare(b.children[0].innerText));\n      break;\n\n    case 'Position':\n      rows.sort((a, b) =>\n        orderSign * (a.children[1].innerText)\n          .localeCompare(b.children[1].innerText));\n      break;\n\n    case 'Office':\n      rows.sort((a, b) =>\n        orderSign * (a.children[2].innerText)\n          .localeCompare(b.children[2].innerText));\n      break;\n\n    case 'Age':\n      rows.sort((a, b) =>\n        orderSign * (a.children[3].innerText) - (b.children[3].innerText));\n      break;\n\n    case 'Salary':\n      rows.sort((a, b) =>\n        orderSign * ((+a.children[4].innerText.slice(1).replace(/,/g, ''))\n          - (+b.children[4].innerText.slice(1).replace(/,/g, ''))));\n      break;\n  }\n  rows.forEach(item => tableBody.append(item));\n});\n\nlet previousRow;\n\ntableBody.addEventListener('click', (handler) => {\n  if (previousRow) {\n    previousRow.classList.remove('active');\n  }\n\n  const row = handler.target.closest('tr');\n\n  row.classList.add('active');\n  previousRow = row;\n});\n\ntable.insertAdjacentHTML('afterend', `\n  <form class=\"new-employee-form\" action=\"/\" method=\"get\">\n    <label>Name:\n      <input id=\"name\" name=\"name\" type=\"text\" data-qa=\"name\">\n    </label>\n    <label>Position:\n      <input\n        id=\"position\"\n        name=\"position\"\n        type=\"text\"\n        data-qa=\"position\"\n      >\n    </label>\n    <label>Office:\n      <select id=\"office\" name=\"office\" data-qa=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input id=\"age\" name=\"age\" type=\"number\" data-qa=\"age\">\n    </label>\n    <label>Salary:\n      <input id=\"salary\" name=\"salary\" type=\"number\" data-qa=\"age\">\n    </label>\n    <button\n      id=\"save_button\" name=\"button\" type=\"text\" data-qa=\"salary\"\n    >\n      Save to table\n    </button>\n  </for>\n`);\n\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const body = document.querySelector('body');\n\n  body.insertAdjacentHTML('afterend', `\n    <div class=\"notification ${type}\" data-qa=\"notification\">\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    </div>\n  `);\n\n  const notification = document.querySelector('div');\n\n  notification.style.top = posTop + 'px';\n  notification.style.right = posRight + 'px';\n\n  setTimeout(() => notification.remove(), 5000);\n};\n\nfunction checkForErrors(employeeName, position, office, age, salary) {\n  const errorMessages = [];\n\n  if (employeeName.length > 0 && employeeName.length < 4) {\n    errorMessages.push('Name should consist of at least 4 letters.');\n  }\n\n  if (age !== '' && (+age < 18 || +age > 90)) {\n    errorMessages.push('Age range should be from 18 to 90.');\n  }\n\n  if (\n    employeeName === ''\n    || position === ''\n    || office === ''\n    || age === ''\n    || salary === ''\n  ) {\n    errorMessages.push('All fields are required.');\n  }\n\n  if (salary < 0) {\n    errorMessages.push('Salary should be larger than 0.');\n  }\n\n  if (Number.isNaN(salary)) {\n    errorMessages.push('Salary should be numeric value.');\n  }\n\n  return errorMessages;\n}\n\nconst form = document.forms[0];\n\nform.addEventListener('submit', (handler) => {\n  handler.preventDefault();\n\n  const data = new FormData(form);\n  const salary = data.get('salary');\n  const employeeName = data.get('name').trim();\n  const position = data.get('position');\n  const office = data.get('office');\n  const age = data.get('age');\n  const salaryString = `$` + Number(salary).toLocaleString('en-US');\n  const errorMessages = checkForErrors(\n    employeeName, position, office, age, salary\n  );\n\n  if (errorMessages.length) {\n    pushNotification(\n      10, 10, 'There was an error:', errorMessages.join('\\n'), 'error'\n    );\n  } else {\n    pushNotification(\n      10, 10, 'Success', 'Employee was saved successfully.', 'success'\n    );\n\n    tableBody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${employeeName}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>${salaryString}</td>\n    </tr>\n    `);\n\n    form.reset();\n  }\n});\n\ntableBody.addEventListener('dblclick', (e) => {\n  const cell = e.target;\n  const cellIndex = cell.cellIndex;\n  const initialValue = cell.innerText;\n  const selectedRow = e.target.closest('tr');\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n  input.type = 'text';\n  input.name = 'cell-input';\n  input.setAttribute('value', initialValue);\n  cell.innerText = '';\n  cell.append(input);\n  input.focus();\n\n  input.addEventListener('keyup', (handleKeypress) => {\n    if (handleKeypress.key === 'Enter') {\n      updateCell();\n    }\n  });\n\n  input.addEventListener('blur', () => {\n    updateCell();\n  });\n\n  function updateCell() {\n    const cellValues = [];\n\n    for (let i = 0; i < 5; i++) {\n      if (cellIndex === i) {\n        cellValues.push(input.value);\n      } else {\n        cellValues.push(selectedRow.children[i].innerText);\n      }\n    }\n\n    cellValues[0] = cellValues[0].trim();\n\n    if (cellValues[4][0] === '$') {\n      cellValues[4] = +cellValues[4].slice(1).replace(',', '');\n    } else {\n      cellValues[4] = +cellValues[4].replace(',', '');\n    }\n\n    selectedRow.classList.remove('active');\n\n    const errorMessages = checkForErrors(...cellValues);\n\n    if (errorMessages.length) {\n      cell.innerText = initialValue;\n\n      pushNotification(\n        10, 10, 'There was an error:', errorMessages.join('\\n'), 'error'\n      );\n    } else {\n      if (cellIndex === 4) {\n        cell.innerText = `$` + Number(cellValues[4]).toLocaleString('en-US');\n      } else {\n        cell.innerText = cellValues[cellIndex];\n      }\n\n      pushNotification(\n        10, 10, 'Success', 'Employee was saved successfully.', 'success'\n      );\n    }\n  }\n});\n"]}